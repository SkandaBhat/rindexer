name: Build & publish docker image

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - master
  release:
    types: [published]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: # This 'permissions' key should be indented 4 spaces (aligned with runs-on, strategy)
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            image: ghcr.io/${{ github.repository }}
          - dockerfile: bundled.Dockerfile
            image: ghcr.io/${{ github.repository }}-bundled

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=sha
            type=sha,format=long
            # set latest tag for default branch (e.g., master)
            type=raw,value=latest,enable={{is_default_branch}}
            # Tag with the release version (e.g., v1.0.0) when a release is published
            type=ref,event=tag

      - name: Set Release Version ARG for Dockerfile
        id: set_release_arg
        run: |
          # Default to 'latest' or 'dev' if not a release event
          RELEASE_VER="dev"
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # Extract version from tag name (e.g., v0.21.0 -> 0.21.0)
            RELEASE_VER="${{ github.event.release.tag_name }}"
            RELEASE_VER="${RELEASE_VER#v}" # Remove 'v' prefix
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            # Optionally, for master, use a commit SHA or a more specific identifier
            # For simplicity, if not a release, use a SHA from master for latest
            RELEASE_VER="${{ github.sha }}"
          fi
          echo "release_version=$RELEASE_VER" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Pass the version as a build-arg to the Dockerfile
          build-args: |
            RELEASE_VERSION=${{ steps.set_release_arg.outputs.release_version }}